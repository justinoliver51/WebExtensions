package com.IBTrading.Traders;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.IBTrading.servlets.IBTradingAPI;
import com.IBTrading.tradeparsers.ProfitlyTradeParser;

public class SupermanTrader implements TraderInterface
{
	// Passed parameters
	private String traderID;
	private String tradeString;
	
	// Parsed trade information
	ProfitlyTradeParser parser;
	private IBTradingAPI tradingAPI;	// TWS API
	
	// Valid trade - true if parsed correctly, false otherwise
	public boolean hasValidTrade = false;
	
	// PROFIT.LY
	// List of trader identifiers and their strings
	private static String lastTraderString;
	
	// CONSTANTS
	private final int SECONDS = 1000;
	private final String BUY = "BUY";
	private final String SELL = "SELL";
	private static int TRADERPERCENTAGE = 25;
	
	public SupermanTrader(String newTrade, IBTradingAPI newTradingAPI)
	{	
		parser = new ProfitlyTradeParser();
		hasValidTrade = parser.parseTrade(newTrade);
		if(hasValidTrade == true)
		{
			lastTraderString = newTrade;
			hasValidTrade = true;
		}
		
		tradingAPI = newTradingAPI;
	}
	
	// Parses the passed trade into the necessary information for the trade
	public boolean parseTrade(String newTrade)
	{
		return false;
	}

	// Initiates the trade with TWS
	public boolean trade()
	{
		// Make the purchase
		tradingAPI.placeOrder(BUY, tradeParser.symbol, tradeParser.quantity);
		
		// Sleep for 90 seconds, then sell
		try
		{
			Thread.sleep( 60 * SECONDS );
		}
		catch ( InterruptedException e )
		{
			System.out.println( "awakened prematurely" );
		}
		
		// Sell the stocks
		tradingAPI.placeOrder(SELL, tradeParser.symbol, tradeParser.quantity);
		
		return true;
	}
}