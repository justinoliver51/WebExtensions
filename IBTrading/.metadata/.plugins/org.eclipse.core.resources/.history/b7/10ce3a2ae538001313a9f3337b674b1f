package com.IBTrading.tradeparsers;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

public class JasonBondsTradeParser {
	// Passed parameters
	private String tradeString;
	
	// Parsed trade information
	public String symbol = null;
	public int quantity = 0;

	public String action;
	public String totalQuant;
	public String symb;
	public String price;
	
	public JasonBondsTradeParser(String newTrade)
	{
		tradeString = newTrade;
	}
	
	public boolean parseTrade()
	{
		String symb;
		
		// If we are given an invalid value, return
		if(tradeString == null)
		{
			System.out.println("Null trade string");
			return false;
		}
		
		try
		{
			// Get the useful information
			String[] tokens = tradeString.split("[ ]");
			
			// If the string is valid, grab the ticker symbol
			// Our Brand New Pick is <TICKER_SYMBOL> 
			if(tokens[0].equalsIgnoreCase("Bought") && (tokens.length >= 2))
			{
				symb = tokens[1];
			}
			else
				return false;
			
			// If everything went well, set up the trade
			if(areParamatersValid(symb) == true)
			{
				// Update the globals
				symbol = symb;
			}
			else
				return false;
		}catch(Exception e)
		{
			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	
	public boolean areParamatersValid(String symb)
	{
		try
		{
			// If the symbol is not valid
			if( (symb != null) && (symb.length() > 10) )
			{
				System.out.println("Invalid symbol, " + symb);
				return false;
			}
		}catch(Exception e)
		{
			e.printStackTrace();
			return false;
		}
		
		return true;
	}
}
